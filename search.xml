<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>VsCode、Typora快捷键总结</title>
    <url>/2020/04/13/VsCode%E3%80%81Typora%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="VsCode"><a href="#VsCode" class="headerlink" title="VsCode"></a>VsCode</h2><p><strong>生成html模板</strong></p>
<p>！+ tab</p>
<p><strong>格式化</strong></p>
<p>shift + alt + F</p>
<p><strong>单行注释</strong></p>
<p>ctrl+k+C</p>
<p>ctrl + /</p>
<p><strong>多行注释</strong></p>
<p>alt+shift+A</p>
<p><strong>快速复制一行</strong></p>
<p>alt+shift+ ⬇</p>
<h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><p><strong>生成代码块</strong></p>
<p>ctrl+shift+K</p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>VsCode</tag>
      </tags>
  </entry>
  <entry>
    <title>lin0214的博客</title>
    <url>/2020/09/02/lin0214%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p><strong>点击标题（lin0214的博客），打开左上角的播放器听首歌吧</strong></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
  </entry>
  <entry>
    <title>关于axios发送请求时使用data或params的区别</title>
    <url>/2020/09/02/%E5%85%B3%E4%BA%8Eaxios%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E6%97%B6%E4%BD%BF%E7%94%A8data%E6%88%96params%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<p>params是添加到url的请求字符串中的，用于get请求。 </p>
<p>而data是添加到请求体（body）中的， 用于post请求。</p>
<p>1、HTTP请求过程中，get请求：表单参数以name=value&amp;name1=value1的形式附到url的后面；</p>
<p>2、post请求：表单参数是在请求体中，也是name=value&amp;name1=value1的形式在请求体中。</p>
]]></content>
      <categories>
        <category>Vue之路</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>关于element table表格展开属性expand箭头前加入展开收起文字提示</title>
    <url>/2020/08/28/%E5%85%B3%E4%BA%8Eelement-table%E8%A1%A8%E6%A0%BC%E5%B1%95%E5%BC%80%E5%B1%9E%E6%80%A7expand%E7%AE%AD%E5%A4%B4%E5%89%8D%E5%8A%A0%E5%85%A5%E5%B1%95%E5%BC%80%E6%94%B6%E8%B5%B7%E6%96%87%E5%AD%97%E6%8F%90%E7%A4%BA/</url>
    <content><![CDATA[<p>索引到图标的class值之后在css中修改属性</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"> <span class="selector-class">.el-table__expand-icon</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">48px</span>;</span><br><span class="line">    &amp;::before &#123;</span><br><span class="line">      <span class="selector-tag">content</span>: &quot;展开&quot;;</span><br><span class="line">      <span class="selector-tag">margin-left</span>: <span class="selector-tag">-35px</span>;</span><br><span class="line">      <span class="selector-tag">color</span>: <span class="selector-id">#555</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.el-icon</span> &#123;</span><br><span class="line">      <span class="attribute">transition</span>: transform <span class="number">0.2s</span> ease-in-out;</span><br><span class="line">      &amp;::before &#123;</span><br><span class="line">        <span class="selector-tag">content</span>: &quot;\<span class="selector-tag">e6df</span>&quot;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.el-table__expand-icon--expanded</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line"></span><br><span class="line">    &amp;::before &#123;</span><br><span class="line">      <span class="selector-tag">content</span>: &quot;收起&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.el-icon</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Vue之路</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>element-ui table表格表头添加tooltip提示表头内容</title>
    <url>/2020/08/26/element-ui-table%E8%A1%A8%E6%A0%BC%E8%A1%A8%E5%A4%B4%E6%B7%BB%E5%8A%A0tooltip%E6%8F%90%E7%A4%BA%E8%A1%A8%E5%A4%B4%E5%86%85%E5%AE%B9/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;el-table-column  prop&#x3D;&quot;dealPrice&quot; label&#x3D;&quot;成交单价&quot;&gt;</span><br><span class="line">    &lt;template slot&#x3D;&quot;header&quot; slot-scope&#x3D;&quot;scope&quot;&gt;</span><br><span class="line">        &lt;el-tooltip </span><br><span class="line">        class&#x3D;&quot;item&quot; </span><br><span class="line">        effect&#x3D;&quot;dark&quot; </span><br><span class="line">        content&#x3D;&quot;成交单价&#x3D;单价-商品优惠金额&#x2F;购买数量&quot; </span><br><span class="line">        placement&#x3D;&quot;top&quot;&gt;</span><br><span class="line">            &lt;span&gt;成交单价&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;el-tooltip&gt;</span><br><span class="line">    &lt;&#x2F;template&gt;</span><br><span class="line">&lt;&#x2F;el-table-column&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Vue之路</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-cli 3.x跨域问题的解决</title>
    <url>/2020/08/21/vue-cli%203.x%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<p>之所以要解决这个问题是因为在vue-cli 3.x 的版本没有了config里的配置文件，需要自己在根目录新建一个vue.config.js的文件来进行配置</p>
<h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p>安装axios</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install axios --save</span><br></pre></td></tr></table></figure>

<h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>在main.js文件中引入axios文件并配置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入文件</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="comment">// 进行绑定</span></span><br><span class="line">Vue.prototype.$axios = axios</span><br><span class="line"><span class="comment">// 设置基础url</span></span><br><span class="line">axios.defaults.baseURL = <span class="string">&#x27;/api&#x27;</span></span><br></pre></td></tr></table></figure>



<h4 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h4><p>在根目录下新建一个vue.config.js的文件，在里面进行跨域的配置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    open: <span class="literal">true</span>,</span><br><span class="line">    host: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    port: <span class="number">8080</span>,</span><br><span class="line">    https: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// 以上的ip和端口是我们本机的;下面为需要跨域的</span></span><br><span class="line">    proxy: &#123; <span class="comment">// 配置跨域</span></span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        target: <span class="string">&#x27;http://localhost:3000&#x27;</span>, <span class="comment">// 这里后台的地址模拟的;应该填写你们真实的后台接口</span></span><br><span class="line">        ws: <span class="literal">true</span>,</span><br><span class="line">        changOrigin: <span class="literal">true</span>, <span class="comment">// 允许跨域</span></span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">          <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">          <span class="comment">// 请求的时候使用这个api就可以</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h4><p>在需要进行数据访问的页面进行请求，比如我在App.vue中进行请求</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F; import LoginRegister from &#39;.&#x2F;components&#x2F;Login-Register.vue&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;app&#39;,</span><br><span class="line">  components: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    this.$axios(&#123;</span><br><span class="line">      method: &#39;get&#39;,</span><br><span class="line">      url: &#39;&#x2F;&#39;</span><br><span class="line">    &#125;).then(res &#x3D;&gt; &#123;</span><br><span class="line">      console.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>



<p><strong>可以进行这些的条件是你的后端的服务器已经搭建好了，哪怕只是发送一句hello world！</strong></p>
<p><img src="C:\Users\ljl\AppData\Roaming\Typora\typora-user-images\image-20200419202625926.png" alt="image-20200419202625926"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xhr.js?b50d:178 POST http:&#x2F;&#x2F;localhost:8080&#x2F;api&#x2F;adminUserM&#x2F;del net::ERR_EMPTY_RESPONSE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">createError.js?2d83:16 Uncaught (in promise) Error: Network Error</span><br><span class="line">    at createError (createError.js?2d83:16)</span><br><span class="line">    at XMLHttpRequest.handleError (xhr.js?b50d:83)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Vue之路</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>前端常用网站汇总</title>
    <url>/2020/08/21/%E5%89%8D%E7%AB%AF%E5%B8%B8%E7%94%A8%E7%BD%91%E7%AB%99%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<p>这里记录了一些前端开发好用方便的网站</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">工具类</span><br><span class="line"></span><br><span class="line">1、浏览器兼容性查询</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;www.caniuse.com&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">2、RGB与十六进制颜色码转换</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;www.sioe.cn&#x2F;yingyong&#x2F;yanse-rgb-16&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">3、图标库</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;fontawesome.com&#x2F;icons?d&#x3D;gallery</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;icon.52112.com&#x2F;</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;www.iconfont.cn&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">4、svg生成图标</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;icomoon.io&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">5、Lodash</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;www.html.cn&#x2F;doc&#x2F;lodash&#x2F;#_defaultsobject-sources</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">6、UI设计工具sketch</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;www.sketchcn.com&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">7、接口管理工具Yapi</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;yapi.ymfe.org&#x2F;documents&#x2F;index.html</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">8、时间戳转换</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;tool.lu&#x2F;timestamp&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">9、浏览器兼容性测试</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;turbo.net&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">10、在线编辑工具</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;codepen.io&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">11、前端开发者社区</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;scotch.io&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">12、三次贝塞尔函数（cubic-bezier）在线调整</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;cubic-bezier.com&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">13、HTML、css、js在线编辑预览（主攻动画）下面是我的主页：</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;codepen.io&#x2F;dreamsqin</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">14、Git常见问题及解决方案</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;k88hudson&#x2F;git-flight-rules&#x2F;blob&#x2F;master&#x2F;README_zh-CN.md</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">框架及插件类</span><br><span class="line"></span><br><span class="line">1、OpenLayers2 API（官网：https:&#x2F;&#x2F;openlayers.org&#x2F;）</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;dev.openlayers.org&#x2F;releases&#x2F;OpenLayers-2.13.1&#x2F;doc&#x2F;apidocs&#x2F;files&#x2F;OpenLayers-js.html</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">2、OpenLayers2 example</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;dev.openlayers.org&#x2F;examples&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">3、Js动画库</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;velocityjs.org&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">4、html2canvas（对dom进行“截图”生成带坐标的canvas副本）</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;html2canvas.hertzen.com&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">5、数字加载动画</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;inorganik.github.io&#x2F;countUp.js&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">6、数据Mock</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;mockjs.com&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">7、Vue视图框架element-ui</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;element.eleme.cn&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">8、React视图框架Ant Design</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;1x.ant.design&#x2F;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">9、基于Node的Websocket</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;www.npmjs.com&#x2F;package&#x2F;ws</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">10、Node进程管理PM2</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;pm2.io&#x2F;doc&#x2F;en&#x2F;runtime&#x2F;quick-start&#x2F;?utm_source&#x3D;pm2&amp;utm_medium&#x3D;website&amp;utm_campaign&#x3D;rebranding</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">11、Node版本管理NVM</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;coreybutler&#x2F;nvm-windows&#x2F;releases</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">12、websocket的npm包Socket.io-client</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;socketio&#x2F;socket.io-client&#x2F;blob&#x2F;master&#x2F;docs&#x2F;API.md</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">13、vue的websocket插件Vue-Socket.io（基于Socket.io-client封装，支持Vuex）</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;MetinSeylan&#x2F;Vue-Socket.io&#x2F;blob&#x2F;master&#x2F;README.md</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">14、Chrome扩展程序库</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;173app.com&#x2F;chrome-ext</span><br></pre></td></tr></table></figure>



<p>转载 <a href="https://www.cnblogs.com/dreamsqin/p/10954024.html">https://www.cnblogs.com/dreamsqin/p/10954024.html</a></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Vue解除双向绑定</title>
    <url>/2020/08/21/%E5%85%B3%E4%BA%8EVue%E8%A7%A3%E9%99%A4%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/</url>
    <content><![CDATA[<p>今天在用element的对话框组件进行数据的修改的时候，遇到了数据双向绑定使得获取单行的表格的值后，修改信息无法获取到对于的表格内的值，因为双向绑定同时修改了父页面的数据。</p>
<p>所以用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">this</span>.theOneAdData = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>.theTwoAdData))</span><br><span class="line"><span class="comment">// JSON.stringify()转化为json数组</span></span><br><span class="line"><span class="comment">// JSON.parse() json数组转化为对象</span></span><br></pre></td></tr></table></figure>

<p>来解除双向绑定。</p>
]]></content>
      <categories>
        <category>数据传输</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>css知识点记录</title>
    <url>/2020/08/20/css%E7%9F%A5%E8%AF%86%E7%82%B9%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p><strong>transform属性</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* transform: tranlate()表示向X轴，向Y轴移动自生距离的多少,</span></span><br><span class="line"><span class="comment">与left与top配合，可以将一个样式移动到屏幕中央*/</span></span><br><span class="line"><span class="selector-tag">left</span>: 50%;</span><br><span class="line"><span class="selector-tag">top</span>: 50%;</span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translate</span>(<span class="selector-tag">-50</span>%,<span class="selector-tag">-50</span>%);</span><br></pre></td></tr></table></figure>



<p><strong>关于background中的一些常用属性</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* opacity 不透明度 */</span></span><br><span class="line"><span class="selector-tag">opacity</span>: 0<span class="selector-class">.7</span>;</span><br><span class="line"><span class="comment">/* 图片定位  居中*/</span></span><br><span class="line"><span class="selector-tag">background-position</span>: <span class="selector-tag">center</span>;</span><br><span class="line"><span class="comment">/* 图片尺寸 全覆盖 */</span></span><br><span class="line"><span class="selector-tag">background-size</span>: <span class="selector-tag">cover</span>;</span><br><span class="line"><span class="comment">/* 设置图片为不重复 */</span></span><br><span class="line"><span class="selector-tag">background-repeat</span>: <span class="selector-tag">no-repeat</span>;</span><br><span class="line"><span class="comment">/* 视差效果显示，将图片固定 */</span></span><br><span class="line"><span class="selector-tag">background-attachment</span>: <span class="selector-tag">fixed</span>;</span><br></pre></td></tr></table></figure>

<p><strong>position 定位</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">§ <span class="selector-tag">absolute</span> :生成绝对定位的元素， 相对于最近一级的 定位不是 <span class="selector-tag">static</span> 的父元素来进行定位。</span><br><span class="line"></span><br><span class="line">§ <span class="selector-tag">fixed</span> （老<span class="selector-tag">IE</span>不支持）生成绝对定位的元素，通常相对于浏览器窗口或 <span class="selector-tag">frame</span> 进行定位。</span><br><span class="line"></span><br><span class="line">§ <span class="selector-tag">relative</span> 生成相对定位的元素，相对于其在普通流中的位置进行定位。</span><br><span class="line"></span><br><span class="line">§ <span class="selector-tag">static</span> 默认值。没有定位，元素出现在正常的流中</span><br><span class="line"></span><br><span class="line">§ <span class="selector-tag">sticky</span> 生成粘性定位的元素，容器的位置根据正常文档流计算得出</span><br></pre></td></tr></table></figure>

<p><strong>行内元素和块级元素</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">行内元素有：<span class="selector-tag">a</span> <span class="selector-tag">p</span> <span class="selector-tag">span</span> <span class="selector-tag">I</span>  <span class="selector-tag">img</span> <span class="selector-tag">input</span> <span class="selector-tag">select</span> <span class="selector-tag">strong</span>(<span class="selector-tag">input</span>用于定义表单中的各个具体的表单元素)</span><br><span class="line">块级元素有：<span class="selector-tag">div</span> <span class="selector-tag">ul</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> <span class="selector-tag">dl</span> <span class="selector-tag">dt</span> <span class="selector-tag">dd</span></span><br></pre></td></tr></table></figure>

<p><strong>盒模型</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">盒模型：<span class="selector-tag">margin</span> <span class="selector-tag">border</span> <span class="selector-tag">padding</span> <span class="selector-tag">content</span></span><br><span class="line"><span class="selector-tag">Margin</span>(外边距) <span class="selector-tag">-</span> 清除边框外的区域，外边距是透明的。</span><br><span class="line"><span class="selector-tag">Border</span>(边框) <span class="selector-tag">-</span> 围绕在内边距和内容外的边框。</span><br><span class="line"><span class="selector-tag">Padding</span>(内边距) <span class="selector-tag">-</span> 清除内容周围的区域，内边距是透明的。</span><br><span class="line"><span class="selector-tag">Content</span>(内容) <span class="selector-tag">-</span> 盒子的内容，显示文本和图像。</span><br></pre></td></tr></table></figure>

<p><strong>清除浮动的方法</strong></p>
<p>1、父级div定义伪类：after和zoom</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span> </span><br><span class="line"><span class="css">   <span class="selector-class">.div1</span>&#123;<span class="attribute">background</span>:<span class="number">#000080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;&#125;</span></span><br><span class="line"><span class="css">   <span class="selector-class">.div2</span>&#123;<span class="attribute">background</span>:<span class="number">#800080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">margin-top</span>:<span class="number">10px</span>&#125;</span></span><br><span class="line">   </span><br><span class="line"><span class="css">   <span class="selector-class">.left</span>&#123;<span class="attribute">float</span>:left;<span class="attribute">width</span>:<span class="number">20%</span>;<span class="attribute">height</span>:<span class="number">200px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</span></span><br><span class="line"><span class="css">   <span class="selector-class">.right</span>&#123;<span class="attribute">float</span>:right;<span class="attribute">width</span>:<span class="number">30%</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</span></span><br><span class="line">   </span><br><span class="line"><span class="css">   <span class="comment">/*清除浮动代码*/</span></span></span><br><span class="line"><span class="css">   <span class="selector-class">.clearfloat</span><span class="selector-pseudo">:after</span>&#123;<span class="attribute">display</span>:block;<span class="attribute">clear</span>:both;<span class="attribute">content</span>:<span class="string">&quot;&quot;</span>;<span class="attribute">visibility</span>:hidden;<span class="attribute">height</span>:<span class="number">0</span>&#125;</span></span><br><span class="line"><span class="css">   <span class="selector-class">.clearfloat</span>&#123;<span class="attribute">zoom</span>:<span class="number">1</span>&#125;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div1 clearfloat&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>Left<span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>Right<span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div2&quot;</span>&gt;</span></span><br><span class="line">   div2</span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">原理：IE8以上和非IE浏览器才支持:after，原理和方法2有点类似，zoom(IE转有属性)可解决ie6,ie7浮动问题</span><br><span class="line">优点：浏览器支持好，不容易出现怪问题（目前：大型网站都有使用，如：腾迅，网易，新浪等等）</span><br><span class="line">缺点：代码多，不少初学者不理解原理，要两句代码结合使用，才能让主流浏览器都支持</span><br><span class="line">建议：推荐使用，建议定义公共类，以减少CSS代码</span><br></pre></td></tr></table></figure>

<p>2、在结尾处添加空div标签clear:both</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span> </span><br><span class="line"><span class="css">   <span class="selector-class">.div1</span>&#123;<span class="attribute">background</span>:<span class="number">#000080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red&#125;</span></span><br><span class="line"><span class="css">   <span class="selector-class">.div2</span>&#123;<span class="attribute">background</span>:<span class="number">#800080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">margin-top</span>:<span class="number">10px</span>&#125;</span></span><br><span class="line">   </span><br><span class="line"><span class="css">   <span class="selector-class">.left</span>&#123;<span class="attribute">float</span>:left;<span class="attribute">width</span>:<span class="number">20%</span>;<span class="attribute">height</span>:<span class="number">200px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</span></span><br><span class="line"><span class="css">   <span class="selector-class">.right</span>&#123;<span class="attribute">float</span>:right;<span class="attribute">width</span>:<span class="number">30%</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</span></span><br><span class="line">   </span><br><span class="line"><span class="css">   <span class="comment">/*清除浮动代码*/</span></span></span><br><span class="line"><span class="css">   <span class="selector-class">.clearfloat</span>&#123;<span class="attribute">clear</span>:both&#125;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div1&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>Left<span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>Right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;clearfloat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div2&quot;</span>&gt;</span></span><br><span class="line">   div2</span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">原理：添加一个空div，利用css提高的clear:both清除浮动，让父级div能自动获取到高度</span><br><span class="line">优点：简单，代码少，浏览器支持好，不容易出现怪问题</span><br><span class="line">缺点：不少初学者不理解原理；如果页面浮动布局多，就要增加很多空div，让人感觉很不爽</span><br><span class="line">建议：不推荐使用，但此方法是以前主要使用的一种清除浮动方法</span><br></pre></td></tr></table></figure>

<p>3、父级div定义height</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span> </span><br><span class="line"><span class="css">   <span class="selector-class">.div1</span>&#123;<span class="attribute">background</span>:<span class="number">#000080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="comment">/*解决代码*/</span><span class="attribute">height</span>:<span class="number">200px</span>;&#125;</span></span><br><span class="line"><span class="css">   <span class="selector-class">.div2</span>&#123;<span class="attribute">background</span>:<span class="number">#800080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">margin-top</span>:<span class="number">10px</span>&#125;</span></span><br><span class="line">   </span><br><span class="line"><span class="css">   <span class="selector-class">.left</span>&#123;<span class="attribute">float</span>:left;<span class="attribute">width</span>:<span class="number">20%</span>;<span class="attribute">height</span>:<span class="number">200px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</span></span><br><span class="line"><span class="css">   <span class="selector-class">.right</span>&#123;<span class="attribute">float</span>:right;<span class="attribute">width</span>:<span class="number">30%</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div1&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>Left<span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>Right<span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div2&quot;</span>&gt;</span></span><br><span class="line">   div2</span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">原理：父级div手动定义height，就解决了父级div无法自动获取到高度的问题</span><br><span class="line">优点：简单，代码少，容易掌握</span><br><span class="line">缺点：只适合高度固定的布局，要给出精确的高度，如果高度和父级div不一样时，会产生问题</span><br><span class="line">建议：不推荐使用，只建议高度固定的布局时使用</span><br></pre></td></tr></table></figure>

<p>4、父级div定义overflow:hidden</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span> </span><br><span class="line"><span class="css">   <span class="selector-class">.div1</span>&#123;<span class="attribute">background</span>:<span class="number">#000080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="comment">/*解决代码*/</span><span class="attribute">width</span>:<span class="number">98%</span>;<span class="attribute">overflow</span>:hidden&#125;</span></span><br><span class="line"><span class="css">   <span class="selector-class">.div2</span>&#123;<span class="attribute">background</span>:<span class="number">#800080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">margin-top</span>:<span class="number">10px</span>;<span class="attribute">width</span>:<span class="number">98%</span>&#125;</span></span><br><span class="line">   </span><br><span class="line"><span class="css">   <span class="selector-class">.left</span>&#123;<span class="attribute">float</span>:left;<span class="attribute">width</span>:<span class="number">20%</span>;<span class="attribute">height</span>:<span class="number">200px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</span></span><br><span class="line"><span class="css">   <span class="selector-class">.right</span>&#123;<span class="attribute">float</span>:right;<span class="attribute">width</span>:<span class="number">30%</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div1&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>Left<span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>Right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div2&quot;</span>&gt;</span></span><br><span class="line">   div2</span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">原理：必须定义width或zoom:1，同时不能定义height，使用overflow:hidden时，浏览器会自动检查浮动区域的高度</span><br><span class="line">优点：简单，代码少，浏览器支持好</span><br><span class="line">缺点：不能和position配合使用，因为超出的尺寸的会被隐藏</span><br><span class="line">建议：只推荐没有使用position或对overflow:hidden理解比较深的朋友使用</span><br></pre></td></tr></table></figure>

<p>5、父级div定义overflow:auto</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span> </span><br><span class="line"><span class="css">   <span class="selector-class">.div1</span>&#123;<span class="attribute">background</span>:<span class="number">#000080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="comment">/*解决代码*/</span><span class="attribute">width</span>:<span class="number">98%</span>;<span class="attribute">overflow</span>:auto&#125;</span></span><br><span class="line"><span class="css">   <span class="selector-class">.div2</span>&#123;<span class="attribute">background</span>:<span class="number">#800080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">margin-top</span>:<span class="number">10px</span>;<span class="attribute">width</span>:<span class="number">98%</span>&#125;</span></span><br><span class="line">   </span><br><span class="line"><span class="css">   <span class="selector-class">.left</span>&#123;<span class="attribute">float</span>:left;<span class="attribute">width</span>:<span class="number">20%</span>;<span class="attribute">height</span>:<span class="number">200px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</span></span><br><span class="line"><span class="css">   <span class="selector-class">.right</span>&#123;<span class="attribute">float</span>:right;<span class="attribute">width</span>:<span class="number">30%</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div1&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>Left<span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>Right<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div2&quot;</span>&gt;</span></span><br><span class="line">   div2</span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">原理：必须定义width或zoom:1，同时不能定义height，使用overflow:auto时，浏览器会自动检查浮动区域的高度</span><br><span class="line">优点：简单，代码少，浏览器支持好</span><br><span class="line">缺点：内部宽高超过父级div时，会出现滚动条。</span><br><span class="line">建议：不推荐使用，如果你需要出现滚动条或者确保你的代码不会出现滚动条就使用吧。</span><br></pre></td></tr></table></figure>

<p><strong>display属性</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*display属性规定元素应该生成的框的类型*/</span></span><br><span class="line"><span class="selector-tag">none</span>    此元素不会被显示。</span><br><span class="line"><span class="selector-tag">block</span>    此元素将显示为块级元素，此元素前后会带有换行符。</span><br><span class="line"><span class="selector-tag">inline</span>    默认。此元素会被显示为内联元素，元素前后没有换行符。</span><br><span class="line"><span class="selector-tag">inline-block</span>    行内块元素。（<span class="selector-tag">CSS2</span><span class="selector-class">.1</span> 新增的值）</span><br><span class="line"><span class="selector-tag">list-item</span>    此元素会作为列表显示。</span><br><span class="line"><span class="selector-tag">run-in</span>    此元素会根据上下文作为块级元素或内联元素显示。</span><br><span class="line"><span class="selector-tag">compact</span>    <span class="selector-tag">CSS</span> 中有值 <span class="selector-tag">compact</span>，不过由于缺乏广泛支持，已经从 <span class="selector-tag">CSS2</span><span class="selector-class">.1</span> 中删除。</span><br><span class="line"><span class="selector-tag">marker</span>    <span class="selector-tag">CSS</span> 中有值 <span class="selector-tag">marker</span>，不过由于缺乏广泛支持，已经从 <span class="selector-tag">CSS2</span><span class="selector-class">.1</span> 中删除。</span><br><span class="line"><span class="selector-tag">table</span>    此元素会作为块级表格来显示（类似 &lt;<span class="selector-tag">table</span>&gt;），表格前后带有换行符。</span><br><span class="line"><span class="selector-tag">inline-table</span>    此元素会作为内联表格来显示（类似 &lt;<span class="selector-tag">table</span>&gt;），表格前后没有换行符。</span><br><span class="line"><span class="selector-tag">table-row-group</span>    此元素会作为一个或多个行的分组来显示（类似 &lt;<span class="selector-tag">tbody</span>&gt;）。</span><br><span class="line"><span class="selector-tag">table-header-group</span>    此元素会作为一个或多个行的分组来显示（类似 &lt;<span class="selector-tag">thead</span>&gt;）。</span><br><span class="line"><span class="selector-tag">table-footer-group</span>    此元素会作为一个或多个行的分组来显示（类似 &lt;<span class="selector-tag">tfoot</span>&gt;）。</span><br><span class="line"><span class="selector-tag">table-row</span>    此元素会作为一个表格行显示（类似 &lt;<span class="selector-tag">tr</span>&gt;）。</span><br><span class="line"><span class="selector-tag">table-column-group</span>    此元素会作为一个或多个列的分组来显示（类似 &lt;<span class="selector-tag">colgroup</span>&gt;）。</span><br><span class="line"><span class="selector-tag">table-column</span>    此元素会作为一个单元格列显示（类似 &lt;<span class="selector-tag">col</span>&gt;）</span><br><span class="line"><span class="selector-tag">table-cell</span>    此元素会作为一个表格单元格显示（类似 &lt;<span class="selector-tag">td</span>&gt; 和 &lt;<span class="selector-tag">th</span>&gt;）</span><br><span class="line"><span class="selector-tag">table-caption</span>    此元素会作为一个表格标题显示（类似 &lt;<span class="selector-tag">caption</span>&gt;）</span><br><span class="line"><span class="selector-tag">inherit</span>    规定应该从父元素继承 <span class="selector-tag">display</span> 属性的值。</span><br></pre></td></tr></table></figure>

<p><strong>link和@import的区别</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">本质上，这两种方式都是为了加载<span class="selector-tag">css</span>文件，但还是存在细微的差别。</span><br><span class="line"></span><br><span class="line">差别1：老祖宗的差别，<span class="selector-tag">link</span>属于<span class="selector-tag">XHTML</span>标签，而<span class="keyword">@import</span>完全是css提供的一种方式。</span><br><span class="line"></span><br><span class="line">　　　　link标签除了可以加载css外，还可以做很多其他的事情，比如定义RSS，定义rel连接属性等，@import只能加载CSS。</span><br><span class="line"></span><br><span class="line">差别<span class="number">2</span>：加载顺序的差别：当一个页面被夹在的时候（就是被浏览者浏览的时候），link引用的CSS会同时被加载，而@import引用的CSS会等到页面全部被下载完再加载。所以有时候浏览@import加载CSS的页面时会没有样式（就是闪烁），网速慢的时候还挺明显。</span><br><span class="line"></span><br><span class="line">差别<span class="number">3</span>：兼容性的差别。由于@import是CSS2.<span class="number">1</span>提出的所以老的浏览器不支持，@import只有在IE5以上的才能识别，而link标签无此问题，完全兼容。</span><br><span class="line"></span><br><span class="line">差别<span class="number">4</span>：使用dom控制样式时的差别。当时用JavaScript控制dom去改变样式的时候，只能使用link标签，因为@import不是dom可以控制的（不支持）。</span><br><span class="line"></span><br><span class="line">差别<span class="number">5</span>（不推荐）：@import可以在css中再次引入其他样式表，比如创建一个主样式表，在主样式表中再引入其他的样式表，如：</span><br><span class="line"></span><br><span class="line">　　@import “sub1.css”; </span><br><span class="line">　　<span class="keyword">@import</span> “sub2.css”; </span><br><span class="line">　　<span class="selector-tag">sub1</span><span class="selector-class">.css</span> </span><br><span class="line">　　———————<span class="selector-tag">-</span> </span><br><span class="line">　　<span class="selector-tag">p</span> &#123;<span class="attribute">color</span>:red;&#125; </span><br><span class="line">　　<span class="selector-tag">sub2</span><span class="selector-class">.css</span> </span><br><span class="line">　　———————<span class="selector-tag">-</span> </span><br><span class="line">　　<span class="selector-class">.myclass</span> &#123;<span class="attribute">color</span>:blue&#125; </span><br><span class="line"></span><br><span class="line">这样有利于修改和扩展。</span><br><span class="line"></span><br><span class="line">但是：这样做有一个缺点，会对网站服务器产生过多的<span class="selector-tag">HTTP</span>请求，以前是一个文件，而现在确实两个或更多的文件了，服务器压力增大，浏览量大的网站还是谨慎使用。</span><br><span class="line"></span><br><span class="line"><span class="keyword">@import</span>的书写方式</span><br><span class="line"></span><br><span class="line">　　@import <span class="string">&#x27;style.css&#x27;</span> //Windows IE4/ NS4, Mac OS X IE5, Macintosh IE4/IE5/NS4不识别 </span><br><span class="line">　　@import <span class="string">&quot;style.css&quot;</span> //Windows IE4/ NS4, Macintosh IE4/NS4不识别 </span><br><span class="line">　　@import url(style.css) //Windows NS4, Macintosh NS4不识别 </span><br><span class="line">　　@import url(<span class="string">&#x27;style.css&#x27;</span>) //Windows NS4, Mac OS X IE5, Macintosh IE4/IE5/NS4不识别 </span><br><span class="line">　　@import url(<span class="string">&quot;style.css&quot;</span>) //Windows NS4, Macintosh NS4不识别 </span><br><span class="line"></span><br><span class="line">由上分析知道，@import url(style.css)和@import url（<span class="string">&quot;style.css&quot;</span>）是最优的选择，兼容的浏览器最多。从字节优化的角度来看@import url(style.css)最值得推荐。</span><br></pre></td></tr></table></figure>

<p><strong>保持浮层水平垂直居中</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*在支持 CSS3 属性的现代浏览器当中，有一个利用 CSS3 属性的垂直水平居中方法：*/</span></span><br><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">        <span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span><br><span class="line">        <span class="attribute">-moz-transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span><br><span class="line">        <span class="attribute">-o-transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*上面的例子，无论我们怎样调整窗口的大小，红色方块始终会在窗口垂直、水平居中。*/</span></span><br></pre></td></tr></table></figure>

<p><strong>canvas、svg的区别</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SVG</span><br><span class="line">　　　　SVG 是一种使用 XML 描述 2D 图形的语言。</span><br><span class="line">　　　　SVG 基于 XML，这意味着 SVG DOM 中的每个元素都是可用的。您可以为某个元素附加 JavaScript 事件处理器。</span><br><span class="line">　　　　在 SVG 中，每个被绘制的图形均被视为对象。如果 SVG 对象的属性发生变化，那么浏览器能够自动重现图形。</span><br><span class="line">　　　　特点：</span><br><span class="line">　　　　 　　不依赖分辨率</span><br><span class="line">　　　　 　　支持事件处理器</span><br><span class="line">　　　　 　　最适合带有大型渲染区域的应用程序（比如谷歌地图）</span><br><span class="line">　　　　　　 复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）</span><br><span class="line">　　　　 　　不适合游戏应用</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Canvas</span><br><span class="line">　　　　Canvas 通过 JavaScript 来绘制 2D 图形。</span><br><span class="line">　　　　Canvas 是逐像素进行渲染的。</span><br><span class="line">　　　　在 canvas 中，一旦图形被绘制完成，它就不会继续得到浏览器的关注。如果其位置发生变化，那么整个场景也需要重新绘制，包括任何或许已被图形覆盖的对象。</span><br><span class="line">　　　　特点：</span><br><span class="line">　　　    　　依赖分辨率</span><br><span class="line">　　　　 　　不支持事件处理器</span><br><span class="line">　　　　　　 弱的文本渲染能力</span><br><span class="line">　　　　　　 能够以 .png 或 .jpg 格式保存结果图像</span><br><span class="line">　　　　 　　最适合图像密集型的游戏，其中的许多对象会被频繁重绘</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>css之路</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>清明哀悼网页变灰原理</title>
    <url>/2020/08/19/%E6%B8%85%E6%98%8E%E5%93%80%E6%82%BC%E7%BD%91%E9%A1%B5%E5%8F%98%E7%81%B0%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: grayscale</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">过渡器，灰度  </span></span><br><span class="line"><span class="comment">只需添加一个css属性即可实现</span></span><br><span class="line"><span class="comment">可以直接在浏览器中进行测试</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>500 (Internal Server Error) 错误总结</title>
    <url>/2020/08/18/500%20(Internal%20Server%20Error)%20%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p><strong>大致有三类</strong></p>
<h3 id="1-后台接口出错，或是项目没有启动"><a href="#1-后台接口出错，或是项目没有启动" class="headerlink" title="1.后台接口出错，或是项目没有启动"></a>1.后台接口出错，或是项目没有启动</h3><h3 id="2-前后端存在跨域问题"><a href="#2-前后端存在跨域问题" class="headerlink" title="2.前后端存在跨域问题"></a>2.前后端存在跨域问题</h3><h3 id="3-前端的传参出现问题，修改参数类型或参数值"><a href="#3-前端的传参出现问题，修改参数类型或参数值" class="headerlink" title="3.前端的传参出现问题，修改参数类型或参数值"></a>3.前端的传参出现问题，修改参数类型或参数值</h3>]]></content>
      <categories>
        <category>报错</category>
      </categories>
      <tags>
        <tag>报错</tag>
      </tags>
  </entry>
  <entry>
    <title>关于前后端数据传输类型问题的整理</title>
    <url>/2020/08/17/%E5%85%B3%E4%BA%8E%E5%89%8D%E5%90%8E%E7%AB%AF%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E7%B1%BB%E5%9E%8B%E9%97%AE%E9%A2%98%E7%9A%84%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>开发过程中遇到的关于前后端数据传输的问题及解决方案</p>
<h3 id="1-前端用axios向后端传一个数组"><a href="#1-前端用axios向后端传一个数组" class="headerlink" title="1.前端用axios向后端传一个数组"></a>1.前端用axios向后端传一个数组</h3><p>今天在写代码的时候碰到一个前端用axios传输一个数组的问题，传输一个数组对象与传输一个值得方法不一样，导致前端一直报400错误。ids为后端接受的数组字段，传输一个数组的方法其一应该是如下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* FormData 接口提供了一种表示表单数据的键值对的构造方式，经过它的数据可以使用了XMLHttpRequest.send() 方法送出，本接口和此方法都相当简单直接。如果送出时的编码类型被设为 &quot;multipart/form-data&quot;，它会使用和表单一样的格式。 */</span></span><br><span class="line"><span class="keyword">let</span> formData = <span class="keyword">new</span> FormData()</span><br><span class="line"><span class="built_in">this</span>.selectedIds.forEach(<span class="function"><span class="params">s</span> =&gt;</span> &#123;  <span class="comment">// 使用forEach循环将选中的值存入formData对象中。</span></span><br><span class="line">    formData.append(<span class="string">&#x27;ids&#x27;</span>, s)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/* FormData 接口的append() 方法 会添加一个新值到 FormData 对象内的一个已存在的键中，如果键不存在则会添加该键FormData.set 和 append() 的区别在于，如果指定的键已经存在， FormData.set 会使用新值覆盖已有的值，而 append() 会把新值添加到已有值集合的后面。 */</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>._AJAX(&#123;</span><br><span class="line">    url: url,</span><br><span class="line">    data: formData,</span><br><span class="line">    method: <span class="string">&#x27;POST&#x27;</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 结果处理</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="返回对象"><a href="#返回对象" class="headerlink" title="返回对象"></a>返回对象</h2><p>我调用的方法返回给我值叫做返回对象</p>
]]></content>
      <categories>
        <category>数据传输</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
</search>
